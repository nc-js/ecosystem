name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-library:
    name: build (Node v@${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [lts/*, latest]
        workspace:
          - node-js-cjs-parcel
          - node-js-cjs-webpack
          - node-ts-esm-webpack
          - node-ts-esm-parcel
          - node-ts-esm-rollup
          - node-ts-esm-parcel
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build library
        working-directory: ./libs/${{ matrix.workspace }}
        run: npm run build

  pkg-dry-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm ci
      - name: Check if publishable
        run: npm publish --access public --dry-run
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  ci-success:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    needs:
      - build
      - pkg-dry-run
    steps:
      - name: âœ… CI succeeded
        run: exit 0
